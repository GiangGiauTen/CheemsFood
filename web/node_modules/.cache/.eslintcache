[{"D:\\ITSS\\CheemsFood\\web\\src\\index.js":"1","D:\\ITSS\\CheemsFood\\web\\src\\App.js":"2","D:\\ITSS\\CheemsFood\\web\\src\\reportWebVitals.js":"3","D:\\ITSS\\CheemsFood\\web\\src\\components\\Nhom\\AddTeam.jsx":"4","D:\\ITSS\\CheemsFood\\web\\src\\components\\Nhom\\Nhom.jsx":"5","D:\\ITSS\\CheemsFood\\web\\src\\components\\DangNhap\\DangNhap.jsx":"6","D:\\ITSS\\CheemsFood\\web\\src\\components\\DangKy\\DangKy.jsx":"7","D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyCongThuc\\QuanLyCongThuc.jsx":"8","D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyDoCanMua\\QuanLyDoCanMua.jsx":"9","D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyDoLuuTru\\QuanLyDoLuuTru.jsx":"10","D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyDoLuuTru\\Reserved.js":"11","D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyCongThuc\\CongThuc.js":"12","D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyCongThuc\\QuanLyCongThucYeuThich.jsx":"13"},{"size":552,"mtime":1688634823911,"results":"14","hashOfConfig":"15"},{"size":3666,"mtime":1688642935078,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1688634823918,"results":"17","hashOfConfig":"15"},{"size":5498,"mtime":1688636133507,"results":"18","hashOfConfig":"15"},{"size":26139,"mtime":1688636089970,"results":"19","hashOfConfig":"15"},{"size":1337,"mtime":1688634823911,"results":"20","hashOfConfig":"15"},{"size":2012,"mtime":1688634823911,"results":"21","hashOfConfig":"15"},{"size":7746,"mtime":1688746956992,"results":"22","hashOfConfig":"15"},{"size":133,"mtime":1688634823911,"results":"23","hashOfConfig":"15"},{"size":8430,"mtime":1688634823911,"results":"24","hashOfConfig":"15"},{"size":2307,"mtime":1688634823911,"results":"25","hashOfConfig":"15"},{"size":2304,"mtime":1688717578827,"results":"26","hashOfConfig":"15"},{"size":1747,"mtime":1688746533638,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1c4jraa",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ITSS\\CheemsFood\\web\\src\\index.js",[],[],[],"D:\\ITSS\\CheemsFood\\web\\src\\App.js",[],[],"D:\\ITSS\\CheemsFood\\web\\src\\reportWebVitals.js",[],[],"D:\\ITSS\\CheemsFood\\web\\src\\components\\Nhom\\AddTeam.jsx",["71","72","73","74","75","76","77","78","79","80"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, DatePicker, Button, Table, Select } from 'antd';\r\n//import axios from 'axios';\r\nimport moment from 'moment';\r\nconst { TextArea } = Input;\r\n\r\nconst AddMeeting = () => {\r\n  const [form] = Form.useForm();\r\n  const [members, setMembers] = useState([]);\r\n\r\n  const [selectedResident, setSelectedResident] = useState([]);\r\n  const [hostId, setHostId] = useState(null);\r\n  const [existingCodes, setExistingCodes] = useState([]);\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://localhost:4001/api/resident/');\r\n  //       if (response.status === 200) {\r\n  //         const resData = response.data.map(e => {\r\n  //           e['key'] = e['ID'];\r\n  //           return e;\r\n  //         });\r\n  //         setResidentData(resData);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n  //   const fetchExistingCodes = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://localhost:4001/api/meeting/');\r\n  //       if (response.status === 200) {\r\n  //         const codes = response.data.map(e => e.maCuocHop);\r\n  //         setExistingCodes(codes);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n  //   fetchData();\r\n  //   fetchExistingCodes();\r\n  // }, []);\r\n  const users = [\r\n    {\r\n      userId: '1',\r\n      username: 'Trước khi em tồn tại',\r\n      name: 'Ngot',\r\n      password: '123444',\r\n      role: 'admin',\r\n    },\r\n    {\r\n      userId: '2',\r\n      username: 'Sau khi em đi qua',\r\n      name: 'Bun',\r\n      password: 'abc123',\r\n      role: 'user',\r\n    },\r\n    {\r\n      userId: '3',\r\n      username: 'Anh chỉ là cơn gió',\r\n      name: 'Mi',\r\n      password: 'xyz789',\r\n      role: 'user',\r\n    },\r\n    {\r\n      userId: '4',\r\n      username: 'Nắng chưa từng tắt',\r\n      name: 'Xinh',\r\n      password: 'qwe456',\r\n      role: 'user',\r\n    },\r\n    {\r\n      userId: '5',\r\n      username: 'Để đời còn mơ',\r\n      name: 'Hoa',\r\n      password: '789def',\r\n      role: 'admin',\r\n    },\r\n  ];\r\n  const columns = [\r\n    {\r\n      title: 'Tên',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n  ];\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setSelectedResident(selectedRows);\r\n    },\r\n    getCheckboxProps: record => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const checkMeetingCode = (rule, value, callback) => {\r\n    if (existingCodes.includes(value)) {\r\n      callback('Mã nhóm đã tồn tại. Vui Lòng nhập mã khác');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n  const handleSubmit = async values => {\r\n    // try {\r\n    //   values['idNguoiTaoCuocHop'] = hostId;\r\n    //   values['nguoiThamGia'] = selectedResident;\r\n    //   values['ngayHop'] = new Date(\r\n    //     values['meetingDate']['$d'],\r\n    //   ).toLocaleDateString('fr-CA');\r\n    //   console.log(values);\r\n    //   const response = await fetch('http://localhost:4001/api/meeting/', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //       'Content-Type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify(values),\r\n    //   });\r\n    //   if (response.ok) {\r\n    //     console.log('Meeting added successfully');\r\n    //     form.resetFields();\r\n    //     setMembers([]);\r\n    //   } else {\r\n    //     console.error('Failed to add meeting');\r\n    //   }\r\n    // } catch (error) {\r\n    //   console.error('Error:', error);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Thêm Nhóm</h1>\r\n      <Form form={form} onFinish={handleSubmit}>\r\n        <Form.Item\r\n          name=\"groupId\"\r\n          label=\"Mã nhóm\"\r\n          rules={[\r\n            { required: true, message: 'Vui lòng nhập mã nhóm' },\r\n            { validator: checkMeetingCode },\r\n          ]}>\r\n          <Input placeholder=\"Nhập mã nhóm\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Tên Nhóm\"\r\n          rules={[\r\n            { required: true, message: 'Vui lòng nhập tên nhóm' },\r\n            { validator: checkMeetingCode },\r\n          ]}>\r\n          <Input placeholder=\"Nhập mã nhóm\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"noiDung\" label=\"Nội dung\">\r\n          <TextArea rows={4} placeholder=\"Nhập nội dung nhóm\" />\r\n        </Form.Item>\r\n\r\n        {/* <Select\r\n          showSearch\r\n          placeholder=\"Chọn người chủ trì\"\r\n          onChange={target => {\r\n            setHostId(target);\r\n          }}\r\n          optionFilterProp=\"children\"\r\n          filterOption={(input, option) =>\r\n            (option ? option.label : '')\r\n              .toLowerCase()\r\n              .includes(input.toLowerCase())\r\n          }\r\n          options={selectedResident.map(e => {\r\n            return {\r\n              value: e['ID'],\r\n              label: e['hoTen'],\r\n            };\r\n          })}\r\n        /> */}\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Thêm\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <h2>Thành viên</h2>\r\n      <Table\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columns}\r\n        dataSource={users}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMeeting;\r\n","D:\\ITSS\\CheemsFood\\web\\src\\components\\Nhom\\Nhom.jsx",["81","82","83","84","85","86","87","88"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Input, Modal, Form, DatePicker, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n// import axios from 'axios';\r\nimport moment from 'moment';\r\n// import { Link } from 'react-router-dom';\r\nconst { Search } = Input;\r\nconst Nhom = () => {\r\n  const [searchText, setSearchText] = useState(null);\r\n  const [selectedRowData, setSelectedRowData] = useState([]);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isModalVisible2, setIsModalVisible2] = useState(false);\r\n  const [isModalVisible3, setIsModalVisible3] = useState(false);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [isAddParticipantFormVisible, setIsAddParticipantFormVisible] =\r\n    useState(false);\r\n  // const [users, setUsers] = useState([]);\r\n  // const [data, setData] = useState([]);\r\n\r\n  const [editMeeting, setEditMeeting] = useState({});\r\n  // Hàm cập nhật giá trị sửa\r\n  const updateEditValue = (field, value) => {\r\n    setSelectedRowData(prevMeeting => ({\r\n      ...prevMeeting,\r\n      [field]: value,\r\n    }));\r\n  };\r\n  // Hàm lưu giá trị sửa\r\n  const saveEditValue = () => {\r\n    const updatedData = data.map(meeting => {\r\n      if (meeting.maCuocHop === selectedRowData.maCuocHop) {\r\n        return selectedRowData;\r\n      }\r\n      return meeting;\r\n    });\r\n    // setData(updatedData);\r\n    setIsModalVisible(false);\r\n    setIsModalVisible2(false);\r\n    setIsModalVisible3(false);\r\n  };\r\n  // Hàm xóa cuộc họp\r\n  const handleDelete = async maCuocHop => {\r\n    // try {\r\n    //   // Gọi API xóa cuộc họp với mã cuộc họp (meetingId)\r\n    //   const response = await axios.delete(\r\n    //     `http://localhost:4001/api/meeting/${maCuocHop}`,\r\n    //   );\r\n    //   if (response.status === 200) {\r\n    //     // Nếu API xóa thành công, cập nhật lại state của data (danh sách cuộc họp)\r\n    //     setData(prevData =>\r\n    //       prevData.filter(meeting => meeting.maCuocHop !== maCuocHop),\r\n    //     );\r\n    //     setIsModalVisible(false);\r\n    //     setIsModalVisible2(false);\r\n    //   } else {\r\n    //     console.error('Error deleting meeting', response.data.error);\r\n    //     // Xử lý hiển thị thông báo lỗi nếu cần thiết\r\n    //   }\r\n    // } catch (error) {\r\n    //   console.error('Error deleting meeting', error);\r\n    //   // Xử lý hiển thị thông báo lỗi nếu cần thiết\r\n    // }\r\n  };\r\n\r\n  const handleSelectUser = user => {\r\n    setSelectedRowData(prevMeeting => ({\r\n      ...prevMeeting,\r\n      nguoiThamGia: [\r\n        ...prevMeeting.nguoiThamGia,\r\n        {\r\n          name: user.name,\r\n          role: user.role,\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n  const handleSelectFood = food => {\r\n    setSelectedRowData(prevData => ({\r\n      ...prevData,\r\n      FoodsData: [\r\n        ...prevData.FoodsData,\r\n        {\r\n          id: food.id,\r\n          name: food.name,\r\n          description: food.description,\r\n          outdated: food.outdated,\r\n          quantity: food.quantity,\r\n          storage_date: food.storage_date,\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n  // Hàm thêm người tham gia\r\n  const addParticipant = () => {\r\n    setIsAddParticipantFormVisible(!isAddParticipantFormVisible);\r\n  };\r\n\r\n  // Hàm xóa người tham gia\r\n  const removeParticipant = index => {\r\n    const updatedParticipants = [...selectedRowData.nguoiThamGia];\r\n    updatedParticipants.splice(index, 1);\r\n    setSelectedRowData(prevMeeting => ({\r\n      ...prevMeeting,\r\n      nguoiThamGia: updatedParticipants,\r\n    }));\r\n  };\r\n  // Hàm xóa đồ ăn\r\n  const removeFood = index => {\r\n    const updatedParticipants = [...selectedRowData.FoodsData];\r\n    updatedParticipants.splice(index, 1);\r\n    setSelectedRowData(prevFood => ({\r\n      ...prevFood,\r\n      FoodsData: updatedParticipants,\r\n    }));\r\n  };\r\n  // useEffect(() => {\r\n  //   const fetchUsers = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://localhost:4001/api/resident/');\r\n  //       if (response.status === 200) {\r\n  //         const userData = response.data;\r\n  //         setUsers(userData);\r\n  //         setSelectedUsers(userData); // Cập nhật selectedUsers sau khi có dữ liệu người dùng\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchUsers();\r\n  // }, []);\r\n  const users = [\r\n    {\r\n      userId: '1',\r\n      username: 'Trước khi em tồn tại',\r\n      name: 'Ngot',\r\n      password: '123444',\r\n      role: 'admin',\r\n    },\r\n    {\r\n      userId: '2',\r\n      username: 'Sau khi em đi qua',\r\n      name: 'Bun',\r\n      password: 'abc123',\r\n      role: 'user',\r\n    },\r\n    {\r\n      userId: '3',\r\n      username: 'Anh chỉ là cơn gió',\r\n      name: 'Mi',\r\n      password: 'xyz789',\r\n      role: 'user',\r\n    },\r\n    {\r\n      userId: '4',\r\n      username: 'Nắng chưa từng tắt',\r\n      name: 'Xinh',\r\n      password: 'qwe456',\r\n      role: 'user',\r\n    },\r\n    {\r\n      userId: '5',\r\n      username: 'Để đời còn mơ',\r\n      name: 'Hoa',\r\n      password: '789def',\r\n      role: 'admin',\r\n    },\r\n  ];\r\n  const CateGoryData = [\r\n    {\r\n      id: 1,\r\n      name: 'Cheese',\r\n      description: 'Type of cheese used in various dishes',\r\n      storage_date: '2023-06-28',\r\n      outdate: '2023-07-05',\r\n      quantity: 5,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Tomato Sauce',\r\n      description: 'Sauce made from tomatoes, used in pasta and pizza',\r\n      storage_date: '2023-06-30',\r\n      outdate: '2023-07-07',\r\n      quantity: 3,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Pepperoni',\r\n      description: 'Spicy Italian sausage used as a pizza topping',\r\n      storage_date: '2023-07-01',\r\n      outdate: '2023-07-03',\r\n      quantity: 2,\r\n    },\r\n    // Add more ingredients here...\r\n    {\r\n      id: 4,\r\n      name: 'Mushrooms',\r\n      description: 'Edible fungi used in various dishes',\r\n      storage_date: '2023-07-01',\r\n      outdate: '2023-07-06',\r\n      quantity: 4,\r\n    },\r\n    // Add more ingredients here...\r\n    {\r\n      id: 5,\r\n      name: 'Onions',\r\n      description: 'Commonly used vegetable in cooking',\r\n      storage_date: '2023-07-02',\r\n      outdate: '2023-07-04',\r\n      quantity: 3,\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Chicken',\r\n      description: 'Poultry meat used in various recipes',\r\n      storage_date: '2023-07-03',\r\n      outdate: '2023-07-09',\r\n      quantity: 6,\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Garlic',\r\n      description: 'Aromatic bulb used as a flavor enhancer',\r\n      storage_date: '2023-07-04',\r\n      outdate: '2023-07-10',\r\n      quantity: 8,\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Olive Oil',\r\n      description: 'Healthy oil extracted from olives',\r\n      storage_date: '2023-07-05',\r\n      outdate: '2023-07-12',\r\n      quantity: 2,\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Salt',\r\n      description: 'Common seasoning used in cooking',\r\n      storage_date: '2023-07-06',\r\n      outdate: '2023-07-08',\r\n      quantity: 10,\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'Cumin',\r\n      description: 'Spice with a warm, earthy flavor',\r\n      storage_date: '2023-07-07',\r\n      outdate: '2023-07-13',\r\n      quantity: 3,\r\n    },\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://localhost:4001/api/meeting/');\r\n  //       if (response.status === 200) {\r\n  //         const resData = response.data;\r\n  //         setData(resData);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n  const data = [\r\n    {\r\n      groupId: 'ABC123',\r\n      name: 'Ngot Band',\r\n      adminName: 'Giang',\r\n      nguoiThamGia: [\r\n        {\r\n          userId: '1',\r\n          username: 'Trước khi em tồn tại',\r\n          name: 'Ngot',\r\n          password: '123444',\r\n          role: 'admin',\r\n        },\r\n        {\r\n          userId: '2',\r\n          username: 'Sau khi em đi qua',\r\n          name: 'Bun',\r\n          password: 'abc123',\r\n          role: 'user',\r\n        },\r\n        {\r\n          userId: '3',\r\n          username: 'Anh chỉ là cơn gió',\r\n          name: 'Mi',\r\n          password: 'xyz789',\r\n          role: 'user',\r\n        },\r\n      ],\r\n      FoodsData: [\r\n        {\r\n          id: 1,\r\n          name: 'Cheese',\r\n          description: 'Type of cheese used in various dishes',\r\n          storage_date: '2023-06-28',\r\n          outdate: '2023-07-05',\r\n          quantity: 5,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Tomato Sauce',\r\n          description: 'Sauce made from tomatoes, used in pasta and pizza',\r\n          storage_date: '2023-06-30',\r\n          outdate: '2023-07-07',\r\n          quantity: 3,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Pepperoni',\r\n          description: 'Spicy Italian sausage used as a pizza topping',\r\n          storage_date: '2023-07-01',\r\n          outdate: '2023-07-03',\r\n          quantity: 2,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      groupId: 'DEF456',\r\n      name: 'Bun Club',\r\n      adminName: 'Hoa',\r\n      nguoiThamGia: [\r\n        {\r\n          userId: '1',\r\n          username: 'Trước khi em tồn tại',\r\n          name: 'Ngot',\r\n          password: '123444',\r\n          role: 'admin',\r\n        },\r\n        {\r\n          userId: '2',\r\n          username: 'Sau khi em đi qua',\r\n          name: 'Bun',\r\n          password: 'abc123',\r\n          role: 'user',\r\n        },\r\n        {\r\n          userId: '3',\r\n          username: 'Anh chỉ là cơn gió',\r\n          name: 'Mi',\r\n          password: 'xyz789',\r\n          role: 'user',\r\n        },\r\n      ],\r\n      FoodsData: [\r\n        {\r\n          id: 1,\r\n          name: 'Cheese',\r\n          description: 'Type of cheese used in various dishes',\r\n          storage_date: '2023-06-28',\r\n          outdate: '2023-07-05',\r\n          quantity: 5,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Tomato Sauce',\r\n          description: 'Sauce made from tomatoes, used in pasta and pizza',\r\n          storage_date: '2023-06-30',\r\n          outdate: '2023-07-07',\r\n          quantity: 3,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Pepperoni',\r\n          description: 'Spicy Italian sausage used as a pizza topping',\r\n          storage_date: '2023-07-01',\r\n          outdate: '2023-07-03',\r\n          quantity: 2,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      groupId: 'GHI789',\r\n      name: 'Mi Orchestra',\r\n      adminName: 'Anh',\r\n      nguoiThamGia: [\r\n        {\r\n          userId: '1',\r\n          username: 'Trước khi em tồn tại',\r\n          name: 'Ngot',\r\n          password: '123444',\r\n          role: 'admin',\r\n        },\r\n        {\r\n          userId: '2',\r\n          username: 'Sau khi em đi qua',\r\n          name: 'Bun',\r\n          password: 'abc123',\r\n          role: 'user',\r\n        },\r\n        {\r\n          userId: '3',\r\n          username: 'Anh chỉ là cơn gió',\r\n          name: 'Mi',\r\n          password: 'xyz789',\r\n          role: 'user',\r\n        },\r\n      ],\r\n      FoodsData: [\r\n        {\r\n          id: 1,\r\n          name: 'Cheese',\r\n          description: 'Type of cheese used in various dishes',\r\n          storage_date: '2023-06-28',\r\n          outdate: '2023-07-05',\r\n          quantity: 5,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Tomato Sauce',\r\n          description: 'Sauce made from tomatoes, used in pasta and pizza',\r\n          storage_date: '2023-06-30',\r\n          outdate: '2023-07-07',\r\n          quantity: 3,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Pepperoni',\r\n          description: 'Spicy Italian sausage used as a pizza topping',\r\n          storage_date: '2023-07-01',\r\n          outdate: '2023-07-03',\r\n          quantity: 2,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      groupId: 'JKL012',\r\n      name: 'Xinh Ensemble',\r\n      adminName: 'Lan',\r\n      nguoiThamGia: [\r\n        {\r\n          userId: '1',\r\n          username: 'Trước khi em tồn tại',\r\n          name: 'Ngot',\r\n          password: '123444',\r\n          role: 'admin',\r\n        },\r\n        {\r\n          userId: '2',\r\n          username: 'Sau khi em đi qua',\r\n          name: 'Bun',\r\n          password: 'abc123',\r\n          role: 'user',\r\n        },\r\n        {\r\n          userId: '3',\r\n          username: 'Anh chỉ là cơn gió',\r\n          name: 'Mi',\r\n          password: 'xyz789',\r\n          role: 'user',\r\n        },\r\n      ],\r\n      FoodsData: [\r\n        {\r\n          id: 1,\r\n          name: 'Cheese',\r\n          description: 'Type of cheese used in various dishes',\r\n          storage_date: '2023-06-28',\r\n          outdate: '2023-07-05',\r\n          quantity: 5,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Tomato Sauce',\r\n          description: 'Sauce made from tomatoes, used in pasta and pizza',\r\n          storage_date: '2023-06-30',\r\n          outdate: '2023-07-07',\r\n          quantity: 3,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Pepperoni',\r\n          description: 'Spicy Italian sausage used as a pizza topping',\r\n          storage_date: '2023-07-01',\r\n          outdate: '2023-07-03',\r\n          quantity: 2,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      groupId: 'MNO345',\r\n      name: 'Hoa Society',\r\n      adminName: 'Trang',\r\n      nguoiThamGia: [\r\n        {\r\n          userId: '1',\r\n          username: 'Trước khi em tồn tại',\r\n          name: 'Ngot',\r\n          password: '123444',\r\n          role: 'admin',\r\n        },\r\n        {\r\n          userId: '2',\r\n          username: 'Sau khi em đi qua',\r\n          name: 'Bun',\r\n          password: 'abc123',\r\n          role: 'user',\r\n        },\r\n        {\r\n          userId: '3',\r\n          username: 'Anh chỉ là cơn gió',\r\n          name: 'Mi',\r\n          password: 'xyz789',\r\n          role: 'user',\r\n        },\r\n      ],\r\n      FoodsData: [\r\n        {\r\n          id: 1,\r\n          name: 'Cheese',\r\n          description: 'Type of cheese used in various dishes',\r\n          storage_date: '2023-06-28',\r\n          outdate: '2023-07-05',\r\n          quantity: 5,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Tomato Sauce',\r\n          description: 'Sauce made from tomatoes, used in pasta and pizza',\r\n          storage_date: '2023-06-30',\r\n          outdate: '2023-07-07',\r\n          quantity: 3,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'Pepperoni',\r\n          description: 'Spicy Italian sausage used as a pizza topping',\r\n          storage_date: '2023-07-01',\r\n          outdate: '2023-07-03',\r\n          quantity: 2,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n  const handleSearch = value => {\r\n    setSearchText(value);\r\n  };\r\n  const handleSearchUsers = value => {\r\n    const filteredUsers = users.filter(user =>\r\n      user.name.toLowerCase().includes(value.toLowerCase()),\r\n    );\r\n    setSelectedUsers(filteredUsers);\r\n  };\r\n  //Hàm xem thông tin nhóm\r\n  const handleRowClick = record => {\r\n    setSelectedRowData(record);\r\n    setIsModalVisible2(true);\r\n  };\r\n  //hàm Edit thông tin nhóm\r\n  const handleEdit = record => {\r\n    setSelectedRowData(record);\r\n\r\n    setIsModalVisible(true);\r\n  };\r\n  //hàm xem danh sách đồ ăn cần mua\r\n  const handleViewFood = record => {\r\n    setSelectedRowData(record);\r\n\r\n    setIsModalVisible3(true);\r\n  };\r\n  const handleModalClose = () => {\r\n    setIsModalVisible(false);\r\n    setIsModalVisible2(false);\r\n    setIsModalVisible3(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Mã Nhóm',\r\n      dataIndex: 'groupId',\r\n    },\r\n    {\r\n      title: 'Tên nhóm',\r\n      dataIndex: 'name',\r\n    },\r\n    {\r\n      title: 'Người tạo',\r\n      dataIndex: 'adminName',\r\n    },\r\n    {\r\n      title: 'Thao tác',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a href=\"#1\" onClick={() => handleRowClick(record)}>\r\n            View\r\n          </a>\r\n          <a href=\"#2\" onClick={() => handleEdit(record)}>\r\n            Edit\r\n          </a>\r\n          <a href=\"#3\" onClick={() => handleViewFood(record)}>\r\n            Xem Đồ Cần Mua\r\n          </a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const filteredData = searchText\r\n    ? data.filter(\r\n        record =>\r\n          columns &&\r\n          Array.isArray(columns) &&\r\n          columns.some(\r\n            column =>\r\n              record[column.dataIndex] &&\r\n              record[column.dataIndex]\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(searchText.toLowerCase()),\r\n          ),\r\n      )\r\n    : data;\r\n  return (\r\n    <div>\r\n      <Search\r\n        placeholder=\"Tìm kiếm\"\r\n        value={searchText}\r\n        onChange={e => handleSearch(e.target.value)}\r\n        style={{ width: 200, marginBottom: 16 }}\r\n      />\r\n      <Table\r\n        columns={columns}\r\n        dataSource={filteredData}\r\n        // onRow={record => ({\r\n        //   // onClick: () => {\r\n        //   //   handleRowClick(record);\r\n        //   //   // console.log(record);\r\n        //   },\r\n        // })}\r\n      />\r\n      <Modal\r\n        title=\"Thông tin Nhóm\"\r\n        visible={isModalVisible2}\r\n        onCancel={handleModalClose}\r\n        footer={null}>\r\n        {selectedRowData && (\r\n          <div>\r\n            <p>\r\n              <strong>Mã nhóm:</strong> {selectedRowData.groupId}\r\n            </p>\r\n            <p>\r\n              <strong>Tên nhóm:</strong> {selectedRowData.name}\r\n            </p>\r\n            <p>\r\n              <strong>Người Tạo:</strong> {selectedRowData.adminName}\r\n            </p>\r\n            <p>\r\n              <strong>Người tham gia:</strong>\r\n            </p>\r\n            <Table\r\n              size=\"small\"\r\n              bordered\r\n              dataSource={selectedRowData['nguoiThamGia']}\r\n              pagination={false}\r\n              columns={[\r\n                {\r\n                  title: 'Tên',\r\n                  dataIndex: 'name',\r\n                  key: 'name',\r\n                  render: (_, record) => <p>{record.name}</p>,\r\n                },\r\n\r\n                {\r\n                  title: 'Vai Trò',\r\n                  dataIndex: 'role',\r\n                  key: 'role',\r\n                  render: (_, record) => <p>{record.role}</p>,\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        )}\r\n      </Modal>\r\n      <Modal\r\n        title=\"Thông tin cuộc họp\"\r\n        visible={isModalVisible}\r\n        onCancel={handleModalClose}\r\n        footer={null}>\r\n        {selectedRowData && (\r\n          <div>\r\n            <Form.Item>\r\n              <p>\r\n                <strong>Danh Sách Đồ Cần Mua:</strong>\r\n              </p>\r\n              <Table\r\n                size=\"small\"\r\n                bordered\r\n                dataSource={selectedRowData['nguoiThamGia']}\r\n                pagination={true}\r\n                columns={[\r\n                  {\r\n                    title: 'Tên',\r\n                    dataIndex: 'name',\r\n                    key: 'name',\r\n                    render: (_, record) => <p>{record.name}</p>,\r\n                  },\r\n\r\n                  {\r\n                    title: 'Vai Trò',\r\n                    dataIndex: 'role',\r\n                    key: 'eole',\r\n                    render: (_, record) => <p>{record.role}</p>,\r\n                  },\r\n                  {\r\n                    title: 'Hành động',\r\n                    dataIndex: 'action',\r\n                    key: 'action',\r\n                    render: (_, record, index) => (\r\n                      <Button\r\n                        type=\"link\"\r\n                        onClick={() => removeParticipant(index)}>\r\n                        Xóa\r\n                      </Button>\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n              <Button\r\n                type=\"dashed\"\r\n                onClick={addParticipant}\r\n                style={{ marginTop: '10px' }}>\r\n                Thêm người tham gia\r\n              </Button>\r\n            </Form.Item>\r\n            {isAddParticipantFormVisible && (\r\n              <Form.Item>\r\n                <p>\r\n                  <strong>Thêm người người tham gia:</strong>\r\n                </p>\r\n                <Search\r\n                  placeholder=\"Tìm kiếm người dùng\"\r\n                  onSearch={handleSearchUsers}\r\n                  style={{ marginBottom: 10 }}\r\n                />\r\n                <Table\r\n                  size=\"small\"\r\n                  bordered\r\n                  dataSource={selectedUsers}\r\n                  pagination={{ pageSize: 5 }}\r\n                  columns={[\r\n                    {\r\n                      title: 'Tên',\r\n                      dataIndex: 'name',\r\n                      key: 'name',\r\n                      render: (_, record) => <p>{record.name}</p>,\r\n                    },\r\n\r\n                    {\r\n                      title: 'Vai Trò',\r\n                      dataIndex: 'role',\r\n                      key: 'eole',\r\n                      render: (_, record) => <p>{record.role}</p>,\r\n                    },\r\n                    {\r\n                      title: 'Hành động',\r\n                      dataIndex: 'action',\r\n                      key: 'action',\r\n                      render: (_, record) => (\r\n                        <Button\r\n                          type=\"link\"\r\n                          onClick={() => handleSelectUser(record)}>\r\n                          Chọn\r\n                        </Button>\r\n                      ),\r\n                    },\r\n                  ]}\r\n                />\r\n                {/* ... */}\r\n              </Form.Item>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <Button onClick={saveEditValue} style={{ marginTop: '10px' }}>\r\n            OK\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDelete(selectedRowData.maCuocHop)}\r\n            style={{ marginTop: '10px' }}>\r\n            Xóa Cuộc Họp\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        title=\"Đồ ăn cần mua\"\r\n        visible={isModalVisible3}\r\n        onCancel={handleModalClose}\r\n        footer={null}>\r\n        {selectedRowData && (\r\n          <div>\r\n            <p>\r\n              <strong>Mã nhóm:</strong> {selectedRowData.name}\r\n            </p>\r\n            <Form.Item>\r\n              <p>\r\n                <strong>Đồ ăn cần mua:</strong>\r\n              </p>\r\n              <Table\r\n                size=\"small\"\r\n                bordered\r\n                dataSource={selectedRowData['FoodsData']}\r\n                pagination={true}\r\n                columns={[\r\n                  {\r\n                    title: 'Tên',\r\n                    dataIndex: 'name',\r\n                    key: 'name',\r\n                    render: (_, record) => <p>{record.name}</p>,\r\n                  },\r\n\r\n                  {\r\n                    title: 'Decription',\r\n                    dataIndex: 'description',\r\n                    key: 'description',\r\n                    render: (_, record) => <p>{record.description}</p>,\r\n                  },\r\n                  {\r\n                    title: 'Hành động',\r\n                    dataIndex: 'action',\r\n                    key: 'action',\r\n                    render: (_, record, index) => (\r\n                      <Button type=\"link\" onClick={() => removeFood(index)}>\r\n                        Xóa\r\n                      </Button>\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n              <Button\r\n                type=\"dashed\"\r\n                onClick={addParticipant}\r\n                style={{ marginTop: '10px' }}>\r\n                Thêm Đồ ăn cần mua\r\n              </Button>\r\n            </Form.Item>\r\n            {isAddParticipantFormVisible && (\r\n              <Form.Item>\r\n                <p>\r\n                  <strong>Thêm Đồ ăn cần mua:</strong>\r\n                </p>\r\n                <Search\r\n                  placeholder=\"Tìm kiếm đồ ăn\"\r\n                  onSearch={handleSearchUsers}\r\n                  style={{ marginBottom: 10 }}\r\n                />\r\n                <Table\r\n                  size=\"small\"\r\n                  bordered\r\n                  dataSource={CateGoryData}\r\n                  pagination={{ pageSize: 5 }}\r\n                  columns={[\r\n                    {\r\n                      title: 'Tên',\r\n                      dataIndex: 'name',\r\n                      key: 'name',\r\n                      render: (_, record) => <p>{record.name}</p>,\r\n                    },\r\n\r\n                    {\r\n                      title: 'Decription',\r\n                      dataIndex: 'description',\r\n                      key: 'description',\r\n                      render: (_, record) => <p>{record.description}</p>,\r\n                    },\r\n                    {\r\n                      title: 'Hành động',\r\n                      dataIndex: 'action',\r\n                      key: 'action',\r\n                      render: (_, record) => (\r\n                        <Button\r\n                          type=\"link\"\r\n                          onClick={() => {\r\n                            handleSelectFood(record);\r\n                            // console.log(record);\r\n                          }}>\r\n                          Chọn\r\n                        </Button>\r\n                      ),\r\n                    },\r\n                  ]}\r\n                />\r\n                {/* ... */}\r\n              </Form.Item>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <Button onClick={saveEditValue} style={{ marginTop: '10px' }}>\r\n            OK\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDelete(selectedRowData.groupIdp)}\r\n            style={{ marginTop: '10px' }}>\r\n            Xóa Cuộc Họp\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nhom;\r\n","D:\\ITSS\\CheemsFood\\web\\src\\components\\DangNhap\\DangNhap.jsx",["89"],[],"import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst LoginForm = () => {\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form: ', values);\r\n    // API\r\n  };\r\n\r\n  return (\r\n    <Form name=\"login\" initialValues={{ remember: true }} onFinish={onFinish}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Vui lòng nhập tên đăng nhập!' }]}\r\n      >\r\n        <Input prefix={<UserOutlined />} placeholder=\"Tên đăng nhập\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Vui lòng nhập mật khẩu!' }]}\r\n      >\r\n        <Input.Password prefix={<LockOutlined />} placeholder=\"Mật khẩu\" />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n          <Checkbox>Ghi nhớ</Checkbox>\r\n        </Form.Item>\r\n        <a href=\"/\">Quên mật khẩu</a>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: '100%' }}>\r\n          Đăng nhập\r\n        </Button>\r\n        Hoặc <a to=\"/DangKy\">Đăng ký ngay</a>\r\n      </Form.Item>\r\n\r\n    </Form>\r\n    \r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","D:\\ITSS\\CheemsFood\\web\\src\\components\\DangKy\\DangKy.jsx",[],[],"D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyCongThuc\\QuanLyCongThuc.jsx",[],[],"D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyDoCanMua\\QuanLyDoCanMua.jsx",[],[],"D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyDoLuuTru\\QuanLyDoLuuTru.jsx",[],[],"D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyDoLuuTru\\Reserved.js",[],[],"D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyCongThuc\\CongThuc.js",[],[],"D:\\ITSS\\CheemsFood\\web\\src\\components\\QuanLyCongThuc\\QuanLyCongThucYeuThich.jsx",["90","91","92","93","94"],[],{"ruleId":"95","severity":1,"message":"96","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"99","line":2,"column":23,"nodeType":"97","messageId":"98","endLine":2,"endColumn":33},{"ruleId":"95","severity":1,"message":"100","line":2,"column":50,"nodeType":"97","messageId":"98","endLine":2,"endColumn":56},{"ruleId":"95","severity":1,"message":"101","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"102","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":17},{"ruleId":"95","severity":1,"message":"103","line":9,"column":19,"nodeType":"97","messageId":"98","endLine":9,"endColumn":29},{"ruleId":"95","severity":1,"message":"104","line":11,"column":10,"nodeType":"97","messageId":"98","endLine":11,"endColumn":26},{"ruleId":"95","severity":1,"message":"105","line":12,"column":10,"nodeType":"97","messageId":"98","endLine":12,"endColumn":16},{"ruleId":"95","severity":1,"message":"106","line":12,"column":18,"nodeType":"97","messageId":"98","endLine":12,"endColumn":27},{"ruleId":"95","severity":1,"message":"107","line":13,"column":25,"nodeType":"97","messageId":"98","endLine":13,"endColumn":41},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":2,"column":37,"nodeType":"97","messageId":"98","endLine":2,"endColumn":47},{"ruleId":"95","severity":1,"message":"108","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":24},{"ruleId":"95","severity":1,"message":"101","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":14},{"ruleId":"95","severity":1,"message":"109","line":20,"column":10,"nodeType":"97","messageId":"98","endLine":20,"endColumn":21},{"ruleId":"95","severity":1,"message":"110","line":20,"column":23,"nodeType":"97","messageId":"98","endLine":20,"endColumn":37},{"ruleId":"95","severity":1,"message":"111","line":22,"column":9,"nodeType":"97","messageId":"98","endLine":22,"endColumn":24},{"ruleId":"95","severity":1,"message":"112","line":30,"column":11,"nodeType":"97","messageId":"98","endLine":30,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":35,"column":14,"nodeType":"115","endLine":35,"endColumn":30},{"ruleId":"95","severity":1,"message":"116","line":2,"column":24,"nodeType":"97","messageId":"98","endLine":2,"endColumn":29},{"ruleId":"95","severity":1,"message":"117","line":2,"column":31,"nodeType":"97","messageId":"98","endLine":2,"endColumn":37},{"ruleId":"95","severity":1,"message":"118","line":2,"column":39,"nodeType":"97","messageId":"98","endLine":2,"endColumn":43},{"ruleId":"95","severity":1,"message":"119","line":2,"column":45,"nodeType":"97","messageId":"98","endLine":2,"endColumn":50},{"ruleId":"95","severity":1,"message":"120","line":57,"column":9,"nodeType":"97","messageId":"98","endLine":57,"endColumn":23},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'DatePicker' is defined but never used.","'Select' is defined but never used.","'moment' is defined but never used.","'members' is assigned a value but never used.","'setMembers' is assigned a value but never used.","'selectedResident' is assigned a value but never used.","'hostId' is assigned a value but never used.","'setHostId' is assigned a value but never used.","'setExistingCodes' is assigned a value but never used.","'SearchOutlined' is defined but never used.","'editMeeting' is assigned a value but never used.","'setEditMeeting' is assigned a value but never used.","'updateEditValue' is assigned a value but never used.","'updatedData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Modal' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'handleFavorite' is assigned a value but never used."]